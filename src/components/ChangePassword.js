import React, { useState, useContext } from "react";
import { AuthContext } from "../context/AuthContext";
import { updatePassword } from "../services/authService";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

const ChangePassword = () => {
    const { token } = useContext(AuthContext); // L·∫•y token t·ª´ context
    const [oldPassword, setOldPassword] = useState("");
    const [newPassword, setNewPassword] = useState("");
    const [confirmPassword, setConfirmPassword] = useState("");
    const [loading, setLoading] = useState(false);

    // X·ª≠ l√Ω thay ƒë·ªïi input
    const handleChange = (e) => {
        const { name, value } = e.target;
        if (name === "oldPassword") setOldPassword(value);
        if (name === "newPassword") setNewPassword(value);
        if (name === "confirmPassword") setConfirmPassword(value);
    };

    // X·ª≠ l√Ω ƒë·ªïi m·∫≠t kh·∫©u
    const handleSubmit = async (e) => {
        e.preventDefault();

        if (!oldPassword || !newPassword || !confirmPassword) {
            toast.error("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin.");
            return;
        }

        if (newPassword.length < 6) {
            toast.error("M·∫≠t kh·∫©u m·ªõi ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±.");
            return;
        }

        if (newPassword !== confirmPassword) {
            toast.error("M·∫≠t kh·∫©u m·ªõi kh√¥ng kh·ªõp.");
            return;
        }

        setLoading(true);

        try {
            console.log("üîÑ ƒêang g·ª≠i request ƒë·ªïi m·∫≠t kh·∫©u...");
            console.log("Token:", token);
            console.log("D·ªØ li·ªáu g·ª≠i:", { oldPassword, newPassword });

            await updatePassword(oldPassword, newPassword, token);

            toast.success("ƒê·ªïi m·∫≠t kh·∫©u th√†nh c√¥ng! ‚úÖ");
            setOldPassword("");
            setNewPassword("");
            setConfirmPassword("");
        } catch (error) {
            console.error("‚ùå L·ªói ƒë·ªïi m·∫≠t kh·∫©u:", error);
            toast.error(`L·ªói: ${error}`);
        } finally {
            setLoading(false);
        }
    };


    return (
        <div className="container">
            <h3 className="mb-3">ƒê·ªïi m·∫≠t kh·∫©u</h3>
            <ToastContainer position="top-right" autoClose={3000} /> {/* Hi·ªÉn th·ªã toast */}
            <form onSubmit={handleSubmit}>
                <div className="mb-3">
                    <label htmlFor="oldPassword" className="form-label">M·∫≠t kh·∫©u c≈©</label>
                    <input
                        type="password"
                        className="form-control"
                        id="oldPassword"
                        name="oldPassword"
                        value={oldPassword}
                        onChange={handleChange}
                        required
                    />
                </div>
                <div className="mb-3">
                    <label htmlFor="newPassword" className="form-label">M·∫≠t kh·∫©u m·ªõi</label>
                    <input
                        type="password"
                        className="form-control"
                        id="newPassword"
                        name="newPassword"
                        value={newPassword}
                        onChange={handleChange}
                        required
                    />
                </div>
                <div className="mb-3">
                    <label htmlFor="confirmPassword" className="form-label">Nh·∫≠p l·∫°i m·∫≠t kh·∫©u m·ªõi</label>
                    <input
                        type="password"
                        className="form-control"
                        id="confirmPassword"
                        name="confirmPassword"
                        value={confirmPassword}
                        onChange={handleChange}
                        required
                    />
                </div>
                <button className="btn btn-primary" disabled={loading}
                    onClick={handleSubmit}>
                    {loading ? "ƒêang ƒë·ªïi m·∫≠t kh·∫©u..." : "ƒê·ªïi m·∫≠t kh·∫©u"}
                </button>
            </form>
        </div>
    );
};

export default ChangePassword;
